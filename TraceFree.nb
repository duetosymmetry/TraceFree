Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["TraceFree",
 FontSlant->"Italic",
 FontColor->RGBColor[1, 0, 0]]], "Title"],

Cell[TextData[StyleBox["Make tensors trace-free at definition time",
 FontColor->RGBColor[0, 0, 1]]], "Subtitle"],

Cell[TextData[{
 StyleBox["Leo C. Stein",
  FontSize->18],
 "   leo.stein@gmail.com\n\n(c) 2013 under GPL\n\nhttp://www.xAct.es/\n\
http://groups.google.com/group/xAct"
}], "Subsubtitle"],

Cell[TextData[{
 StyleBox["TraceFree",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 " is a package to demonstrate using xTension. It adds an option, TraceFree, \
to DefTensor to declare a tensor trace-free at the time of definition.\n\n",
 StyleBox["TaceFree",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 " is distributed under the GNU General Public License, and runs on top of ",
 StyleBox["xTensor",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 ", a free package for fast manipulation of abstract tensor expressions. Both \
can be downloaded from ",
 StyleBox["http://www.xAct.es/",
  FontWeight->"Bold"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateList", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2013", ",", "11", ",", "12", ",", "14", ",", "59", ",", 
   "45.91704`8.414548860781643"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xAct`TraceFree`$xTensorVersionExpected", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<1.0.5\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2013", ",", "1", ",", "27"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"xAct`TraceFree`$Version", "=", 
  RowBox[{"{", 
   RowBox[{"\"\<0.1.0\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"2013", ",", "11", ",", "12"}], "}"}]}], "}"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"0.1.0\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "10", ",", "30"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "1. ",
 StyleBox["Initialization",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["1.0. TODO list", "Subsubsection"],

Cell["Nothing right now.", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.1. GPL", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"TraceFree", ":", " ", 
    RowBox[{
     RowBox[{"Make", " ", "tensors", " ", "trace"}], "-", 
     RowBox[{"free", " ", "at", " ", "definition", " ", "time"}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Copyright", " ", 
    RowBox[{"(", "C", ")"}], " ", "2013", " ", "Leo", " ", 
    RowBox[{"C", ".", " ", "Stein"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "program", " ", "is", " ", "free", " ", "software"}], ";", 
     " ", 
     RowBox[{"you", " ", "can", " ", "redistribute", " ", "it", " ", 
      RowBox[{"and", "/", "or"}], " ", "modify", " ", "it", " ", "under", " ",
       "the", " ", "terms", " ", "of", " ", "the", " ", "GNU", " ", "General",
       " ", "Public", " ", "License", " ", "as", " ", "published", " ", "by", 
      " ", "the", " ", "Free", " ", "Software", " ", "Foundation"}], ";", " ", 
     RowBox[{
     "either", " ", "version", " ", "2", " ", "of", " ", "the", " ", 
      "License"}]}], ",", 
    RowBox[{"or", " ", 
     RowBox[{"(", 
      RowBox[{"at", " ", "your", " ", "option"}], ")"}], " ", "any", " ", 
     "later", " ", 
     RowBox[{
     "version", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "This"}], 
     " ", "program", " ", "is", " ", "distributed", " ", "in", " ", "the", 
     " ", "hope", " ", "that", " ", "it", " ", "will", " ", "be", " ", 
     "useful"}], ",", " ", 
    RowBox[{
     RowBox[{"but", " ", "WITHOUT", " ", "ANY", " ", "WARRANTY"}], ";", " ", 
     RowBox[{
     "without", " ", "even", " ", "the", " ", "implied", " ", "warranty", " ",
       "of", " ", "MERCHANTABILITY", " ", "or", " ", "FITNESS", " ", "FOR", 
      " ", "A", " ", "PARTICULAR", " ", 
      RowBox[{"PURPOSE", ".", " ", "See"}], " ", "the", " ", "GNU", " ", 
      "General", " ", "Public", " ", "License", " ", "for", " ", "more", " ", 
      
      RowBox[{
      "details", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "You"}], 
      " ", "should", " ", "have", " ", "received", " ", "a", " ", "copy", " ",
       "of", " ", "the", " ", "GNU", " ", "General", " ", "Public", " ", 
      "License", " ", "along", " ", "with", " ", "this", " ", "program"}], 
     ";", " ", 
     RowBox[{"if", " ", "not"}]}], ",", " ", 
    RowBox[{
    "write", " ", "to", " ", "the", " ", "Free", " ", "Software", " ", 
     "Foundation"}], ",", " ", 
    RowBox[{"Inc", "."}], ",", " ", 
    RowBox[{
     RowBox[{"59", " ", "Temple", " ", "Place"}], "-", 
     RowBox[{"Suite", " ", "330"}]}], ",", " ", "Boston", ",", " ", 
    RowBox[{
     RowBox[{"MA", " ", "02111"}], "-", "1307"}], ",", " ", 
    RowBox[{"USA", "."}]}], " ", "\[IndentingNewLine]", "*)"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["1.2. Info package", "Subsubsection"],

Cell["\<\
(* :Title: TraceFree *)

(* :Author: Leo C. Stein *)

(* :Summary: Make tensors trace-free at definition time. *)

(* :Brief Discussion: TraceFree is a package to demonstrate using xTension. \
It adds an option, TraceFree, to DefTensor to declare a tensor trace-free at \
the time of definition. *)
  
(* :Context: xAct`TraceFree` *)

(* :Package Version: 0.1.0 *)

(* :Copyright: Leo C. Stein (2013) *)

(* :History: TODO *)

(* :Keywords: TODO *)

(* :Source: TraceFree.nb *)

(* :Warning: TODO *)

(* :Mathematica Version: 8.0 and later *)

(* :Limitations: *)
\t
(* :Acknowledgements: *)\
\>", "Input",
 PageWidth->PaperWidth,
 CellMargins->{{60, -272}, {Inherited, Inherited}},
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["1.3. BeginPackage", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Unevaluated", "[", "xAct`xCore`Private`$LastPackage", "]"}], "===",
      "xAct`xCore`Private`$LastPackage"}], ",", 
    RowBox[{
    "xAct`xCore`Private`$LastPackage", "=", "\"\<xAct`TraceFree`\>\""}]}], 
   "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData["xAct`xCore`Private`$LastPackage"], "Input"],

Cell[BoxData["\<\"xAct`TraceFree`\"\>"], "Output"]
}, Open  ]],

Cell[TextData[{
 "Explicit (not hidden) import of ",
 StyleBox["xTensor",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["xPerm",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["xCore",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BeginPackage", "[", 
  RowBox[{"\"\<xAct`TraceFree`\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<xAct`xTensor`\>\"", ",", "\"\<xAct`xPerm`\>\"", ",", 
     "\"\<xAct`xCore`\>\""}], "}"}]}], "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData["\<\"xAct`TraceFree`\"\>"], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Not", "@", 
    RowBox[{"OrderedQ", "@", 
     RowBox[{"Map", "[", 
      RowBox[{"Last", ",", 
       RowBox[{"{", 
        RowBox[{"$xTensorVersionExpected", ",", "xAct`xTensor`$Version"}], 
        "}"}]}], "]"}]}]}], ",", 
   RowBox[{"Throw", "@", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"General", "::", "versions"}], ",", "\"\<xTensor\>\"", ",", 
      "xAct`xTensor`$Version", ",", "$xTensorVersionExpected"}], "]"}]}]}], 
  "]"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", "xAct`xCore`Private`bars", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Package xAct`TraceFree`  version \>\"", ",", 
    RowBox[{"$Version", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<, \>\"", ",", 
    RowBox[{"$Version", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Copyright (C) 2013, Leo C. Stein, under the General Public License.\>\
\"", "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`TraceFree`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.1.0\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "10", ",", "30"}], "}"}]}],
  SequenceForm[
  "Package xAct`TraceFree`  version ", "0.1.0", ", ", {2013, 10, 30}],
  Editable->False]], "Print"],

Cell[BoxData["\<\"Copyright (C) 2013, Leo C. Stein, under the General Public \
License.\"\>"], "Print"]
}, Open  ]]
}, Open  ]],

Cell["\<\
We specify the context xAct`TraceFree` to avoid overriding the Disclaimer of \
the other packages. However we need to turn off the message General:shdw \
temporarily:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "shdw"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAct`xForm`Disclaimer", "[", "]"}], ":=", 
  RowBox[{
  "Print", "[", 
   "\"\<These are points 11 and 12 of the General Public \
License:\\n\\nBECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO \
WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT \
WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES \
PROVIDE THE PROGRAM `AS IS\.b4 WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED \
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO \
THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM \
PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR \
CORRECTION.\\n\\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO \
IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY \
AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR \
DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES \
ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT \
LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED \
BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER \
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE \
POSSIBILITY OF SUCH DAMAGES.\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"On", "[", 
  RowBox[{"General", "::", "shdw"}], "]"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "If ",
 StyleBox["TraceFree",
  FontSlant->"Italic"],
 " is not being called from other package then write this GPL short \
disclaimer:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
   "xAct`xCore`Private`$LastPackage", "===", "\"\<xAct`TraceFree`\>\""}], ",",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Unset", "[", "xAct`xCore`Private`$LastPackage", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "xAct`xCore`Private`bars", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
    "Print", "[", 
     "\"\<These packages come with ABSOLUTELY NO WARRANTY; for details type \
Disclaimer[]. This is free software, and you are welcome to redistribute it \
under certain conditions. See the General Public License for details.\>\"", 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "xAct`xCore`Private`bars", "]"}]}]}], 
  "]"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print"],

Cell[BoxData["\<\"These packages come with ABSOLUTELY NO WARRANTY; for \
details type Disclaimer[]. This is free software, and you are welcome to \
redistribute it under certain conditions. See the General Public License for \
details.\"\>"], "Print"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note that symbols in the Global` context cannot be accessed right now.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"xAct`TraceFree`\"\>", ",", "\<\"xAct`xTensor`\"\>", 
   ",", "\<\"xAct`xPerm`\"\>", ",", "\<\"xAct`xCore`\"\>", 
   ",", "\<\"System`\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input"],

Cell[BoxData["\<\"xAct`TraceFree`\"\>"], "Output"]
}, Open  ]],

Cell["Established connection to external executable?", "Text"],

Cell[CellGroupData[{

Cell[BoxData["$xpermQ"], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.4. Non-standard setup", "Subsubsection"],

Cell["\<\
Here you would do things like:
Screen all dollar indices: (Currently deactivated)\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$PrePrint", "=", "ScreenDollarIndices"}], ";"}]], "Input",
 Evaluatable->False]
}, Closed]],

Cell[CellGroupData[{

Cell["1.5. Usage messages", "Subsubsection"],

Cell["\<\
Here we declare the usage messages. This also creates the variables in the \
public scope.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraceFree", "::", "usage"}], "=", 
   "\"\<TraceFree is an option for DefTensor to declare a tensor trace-free. \
Use TraceFree->{{{a,b},metricg},...} to declare that the contraction using \
metricg on indices (-a,-b) vanishes. Use delta for a trace without metric. \
See TraceFreeRules for usage details.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraceFreeRules", "::", "usage"}], "=", 
   "\"\<TraceFreeRules[tensor[inds],{a,b},met] returns a list of rules which \
make tensor[inds] tracefree on indices {a,b} using metric met for \
contraction. a,b must both appear in inds and be from the same VBundle. met \
can either be a metric, inverse metric, or delta. Other input forms:\n\
TraceFreeRules[tensor[inds],{{{a1,b1},met1},{{a2,b2},met2},...}] returns the \
Union of all rules from each metric-and-index-pair.\n\
TraceFreeRules[tensor[inds],{a,b,...},met] makes tensor tracefree on every \
pair of indices from {a,b,...}.\n\
TraceFreeRules[tensor[inds],{a,b},{met1,met2,...}] uses every metric in the \
list on the set of indices {a,b}. Can be combined with above.\n\
TraceFreeRules[tensor[inds],{a,...}] uses the First metric from the VBundle \
of {a,...}.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetTraceFreeRules", "::", "usage"}], "=", 
   "\"\<SetTraceFreeRules[tensor[inds],arguments...] uses AutomaticRules to \
make the rules from TraceFreeRules[tensor[inds],arguments] automatic. See \
TraceFreeRules.\>\""}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.6. Begin private", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData["\<\"xAct`TraceFree`Private`\"\>"], "Output"]
}, Open  ]],

Cell["The reserved words in version 0.1.0 :", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<xAct`TraceFree`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SetTraceFreeRules\"\>", ",", "\<\"TraceFree\"\>", 
   ",", "\<\"TraceFreeRules\"\>", ",", "\<\"$Version\"\>", 
   ",", "\<\"$xTensorVersionExpected\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Length"}]], "Input"],

Cell[BoxData["5"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"xAct`TraceFree`\"\>", ",", "\<\"xAct`xTensor`\"\>", 
   ",", "\<\"xAct`xPerm`\"\>", ",", "\<\"xAct`xCore`\"\>", 
   ",", "\<\"System`\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input"],

Cell[BoxData["\<\"xAct`TraceFree`Private`\"\>"], "Output"]
}, Open  ]],

Cell["Now this is not being used. Deactivated cell :", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginExamples", "[", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Set", "[", 
     RowBox[{"$Context", ",", "\"\<Global`\>\""}], "]"}], ";", 
    RowBox[{"Global`symbols", "=", 
     RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]}], ";", "Null"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Global`EndExamples", "[", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "=!=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<There are new symbols in Global`:\>\"", ",", "#"}], 
         "]"}]}], "]"}], ";", 
      RowBox[{"Set", "[", 
       RowBox[{"$Context", ",", "\"\<xAct`xForm`Private`\>\""}], "]"}], ";", 
      "Null"}], ")"}], "&"}], "@", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], ",", "Global`symbols"}],
     "]"}]}]}]}], "Input",
 Evaluatable->False]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Main code", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Generally there would be more sections, but we only have one.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**"}], "*", " ", "2.", " ", "Main", " ", "code", " ", "for", " ", 
   "TraceFree"}], " ", "*****************************)"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["2.0 Description of approach", "Subsubsection"],

Cell["\<\
Here I describe the approach of TraceFree. Given:
1. A tensor with natural index positions T[-a,-b,c,D,E,LI[f]] with {a,b,c} in \
TangentM, {D,E} in VB, and LI[f] is a LabelIndex. (NOTE: We actually don\
\[CloseCurlyQuote]t check natural index positions\[LongDash]MakeRule does \
this and complains if there is no metric, and there is no harm if there is a \
metric).
2. A list of traces to take. This is just a list of pairs {{a,b}, met} where \
met is either a metric, inverse metric, and/or delta to use for \
\[OpenCurlyDoubleQuote]tracing\[CloseCurlyDoubleQuote]
   Examples: {{-a,-b},met} means that T[-a,-b,c,D,E,LI[f]] met[a,b] :> 0
   
Everything can be done taking one contraction at a time, so let us focus on \
an individual contraction. The considerations for an individual contraction \
are as follows:
1. The two indices must be compatible: A metric is only on one VBundle at a \
time, not between VBundles (unless we have a soldering form, but let\
\[CloseCurlyQuote]s ignore this).
2. If there is no metric on a VBundle (MetricEndowedQ[VBundle] is False), \
then the only contractions we allow are with delta. MakeRule will complain if \
indices are moved without a metric.
3. If there is a first metric, then indices are allowed to move. A moved \
index implies a contraction with the first metric, the usual convention in \
xTensor. Then we should generate rules for both with and without an explicit \
metric, i.e.
  i) T[-a,-b,c,D,E,LI[f]] met[a,b]
  ii) T[-a,a,c,D,E,LI[f]]
 and symmetry-related expressions. That is also handled by MakeRule.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.1 Convenience functions", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FirstMetricQ", "[", 
    RowBox[{"met_", "?", "MetricQ"}], "]"}], ":=", 
   RowBox[{"met", "===", 
    RowBox[{"First", "@", 
     RowBox[{"MetricsOfVBundle", "@", 
      RowBox[{"VBundleOfMetric", "@", "met"}]}]}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InverseMetricQ", "[", 
    RowBox[{"x_", "?", "xTensorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{"TensorID", "[", "x", "]"}]}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"First", "@", 
      RowBox[{"TensorID", "[", "x", "]"}]}], "===", 
     "xAct`xTensor`Private`InvMetric"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InverseMetricQ", "[", "delta", "]"}], ":=", "False"}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "is", " ", "a", " ", "bug", " ", "in", " ", "xTensor", " ", 
    "1.0", ".5", " ", "and", " ", 
    RowBox[{"earlier", ":", " ", 
     RowBox[{
      RowBox[{"TensorID", "@", "delta"}], " ", "Throws", " ", "a", " ", 
      "Message"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseMetricQ", "[", "_", "]"}], ":=", "False"}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Inv", "[", 
    RowBox[{"imet_", "?", "InverseMetricQ"}], "]"}], ":=", 
   RowBox[{"MasterOf", "@", "imet"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"IndexPos", "[", 
   RowBox[{"list_List", ",", "ind_"}], "]"}], ":=", 
  RowBox[{"Position", "[", 
   RowBox[{"list", ",", "ind", ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"ALIndexQ", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"AIndexQ", "[", "x", "]"}], "||", 
   RowBox[{"LIndexQ", "[", "x", "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NoDummiesQ", "[", 
   RowBox[{"tensor_", "[", 
    RowBox[{"inds___", "?", "ALIndexQ"}], "]"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"IndicesOf", "[", "Dummy", "]"}], "[", 
    RowBox[{"tensor", "[", "inds", "]"}], "]"}], "===", 
   RowBox[{"IndexList", "[", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NoDummiesQ", "[", "_", "]"}], ":=", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HasDummiesQ", "[", "x_", "]"}], ":=", 
  RowBox[{"!", 
   RowBox[{"NoDummiesQ", "[", "x", "]"}]}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeLIPatternRule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LI", "[", "x_", "]"}], "\[RuleDelayed]", 
     RowBox[{"LI", "[", "_", "]"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.2 Checks for TraceFreeRules", "Subsubsection"],

Cell["Error messages", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TraceFree", "::", "dummies"}], "=", 
   "\"\<Tensor must be given with no dummies (no internal \
contractions).\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TraceFree", "::", "sameVBinds"}], "=", 
   "\"\<Indices `1` and `2` are not on the same VBundle.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TraceFree", "::", "deltaCharacter"}], "=", 
   "\"\<When using delta, exactly one index must be up and one index \
down.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TraceFree", "::", "sameVBmet"}], "=", 
   "\"\<Indices `1` and `2` are not from the VBundle of metric `3`.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TraceFree", "::", "doesntappear"}], "=", 
   "\"\<Index `1` does not appear in `2`.\>\""}], ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
We only get to CheckMetInds once all the other tests pass. For the delta case \
when !MetricEndowedQ, we would in principle want to check that the indices in \
tensor have their \[OpenCurlyQuote]natural\[CloseCurlyQuote] characters. \
However, this is already checked for us in MakeRule, so our job is easy.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CheckMetInds", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a_", "?", "AIndexQ"}], ",", 
        RowBox[{"b_", "?", "AIndexQ"}]}], "}"}], ",", 
      RowBox[{"met_", "?", "MetricQ"}]}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"VBundleOfIndex", "[", "a", "]"}], "\[NotEqual]", 
       RowBox[{"VBundleOfMetric", "[", "met", "]"}]}], ",", 
      RowBox[{"Throw", "@", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"TraceFree", "::", "sameVBmet"}], ",", "a", ",", "b", ",", 
         "met"}], "]"}]}]}], "]"}]}], ";"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CheckMetInds", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a_", "?", "AIndexQ"}], ",", 
       RowBox[{"b_", "?", "AIndexQ"}]}], "}"}], ",", 
     RowBox[{"met_", "?", "InverseMetricQ"}]}], "]"}], ":=", 
   RowBox[{"CheckMetInds", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"Inv", "@", "met"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CheckMetInds", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a_", "?", "AIndexQ"}], ",", 
       RowBox[{"b_", "?", "AIndexQ"}]}], "}"}], ",", "delta"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DownIndexQ", "[", "a", "]"}], "&&", 
        RowBox[{"DownIndexQ", "[", "b", "]"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"UpIndexQ", "[", "a", "]"}], "&&", 
        RowBox[{"UpIndexQ", "[", "b", "]"}]}], ")"}]}], ",", 
     RowBox[{"Throw", "@", 
      RowBox[{"Message", "[", 
       RowBox[{"TraceFree", "::", "deltaCharacter"}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CheckTraceFreeRules", "[", 
    RowBox[{
     RowBox[{"tensor_", "[", 
      RowBox[{"inds___", "?", "ALIndexQ"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a_", "?", "AIndexQ"}], ",", 
       RowBox[{"b_", "?", "AIndexQ"}]}], "}"}], ",", 
     RowBox[{"met", ":", 
      RowBox[{
       RowBox[{"_", "?", "MetricQ"}], "|", 
       RowBox[{"_", "?", "InverseMetricQ"}], "|", "delta"}]}]}], "]"}], ":=", 
   
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"HasDummiesQ", "[", 
         RowBox[{"tensor", "[", "inds", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Throw", "@", 
         RowBox[{"Message", "[", 
          RowBox[{"TraceFree", "::", "dummies"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"VBundleOfIndex", "[", "a", "]"}], "\[NotEqual]", 
         RowBox[{"VBundleOfIndex", "[", "b", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Throw", "@", 
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TraceFree", "::", "sameVBinds"}], ",", "a", ",", "b"}], 
          "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"IndexPos", "[", 
           RowBox[{
            RowBox[{"{", "inds", "}"}], ",", "a"}], "]"}]}], "\[Equal]", 
         "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Throw", "@", 
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TraceFree", "::", "doesntappear"}], ",", "a", ",", 
           RowBox[{"tensor", "[", "inds", "]"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"IndexPos", "[", 
           RowBox[{
            RowBox[{"{", "inds", "}"}], ",", "b"}], "]"}]}], "\[Equal]", 
         "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Throw", "@", 
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TraceFree", "::", "doesntappear"}], ",", "b", ",", 
           RowBox[{"tensor", "[", "inds", "]"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"CheckMetInds", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", "met"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.3 TraceFreeRules and SetTraceFreeRules", "Subsubsection"],

Cell["\<\
TODO: Are there duplicate rules?
TODO: Should we get rid of HoldForm? I doubt it...
TODO: Allow AnyIndices.\
\>", "Text"],

Cell["General interfaces.", "Text"],

Cell["A. Two-argument forms", "Text"],

Cell["\<\
1. Super convenience function when there is just a list of indices ... but \
maybe it\[CloseCurlyQuote]s unsafe?\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraceFreeRules", "[", 
    RowBox[{"tens_", ",", 
     RowBox[{"{", 
      RowBox[{"inds__", "?", "AIndexQ"}], "}"}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"{", "inds", "}"}], "]"}], "\[GreaterEqual]", "2"}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"1", "\[Equal]", 
      RowBox[{"Length", "@", 
       RowBox[{"Union", "[", 
        RowBox[{"VBundleOfIndex", "/@", 
         RowBox[{"{", "inds", "}"}]}], "]"}]}]}], ")"}]}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"metrics", "=", 
      RowBox[{"MetricsOfVBundle", "@", 
       RowBox[{"VBundleOfIndex", "@", 
        RowBox[{"First", "@", 
         RowBox[{"{", "inds", "}"}]}]}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"TraceFreeRules", "[", 
      RowBox[{"tens", ",", 
       RowBox[{"{", "inds", "}"}], ",", 
       RowBox[{"First", "@", "metrics"}]}], "]"}], "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Length", "@", "metrics"}], "\[GreaterEqual]", "1"}], 
      ")"}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["2. Convert to turn into three-argument form", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TraceFreeRules", "[", 
    RowBox[{"tens_", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"inds__", "?", "AIndexQ"}], "}"}], ",", "met_"}], "}"}]}], 
    "]"}], ":=", 
   RowBox[{"TraceFreeRules", "[", 
    RowBox[{"tens", ",", 
     RowBox[{"{", "inds", "}"}], ",", "met"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TraceFreeRules", "[", 
    RowBox[{"tens_", ",", 
     RowBox[{"arguments", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_"}], "}"}], ".."}], "}"}]}]}], "]"}], ":=", 
   RowBox[{"Union", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"TraceFreeRules", "[", 
        RowBox[{"tens", ",", "#"}], "]"}], "&"}], "/@", "arguments"}], 
     ")"}]}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell["B. Three-argument forms", "Text"],

Cell["3. Thread over multiple metrics", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TraceFreeRules", "[", 
   RowBox[{"tens_", ",", "slots_", ",", "metrics_List"}], "]"}], ":=", 
  RowBox[{"Union", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"TraceFreeRules", "[", 
       RowBox[{"tens", ",", "slots", ",", "#"}], "]"}], "&"}], "/@", 
     "metrics"}], ")"}]}]}]], "Input",
 InitializationCell->True],

Cell["4. Thread over groups of associated slots", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TraceFreeRules", "[", 
   RowBox[{"tens_", ",", 
    RowBox[{"slots_List", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], ">", "2"}], "&"}], ")"}]}], ",", 
    "met_"}], "]"}], ":=", 
  RowBox[{"Union", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"TraceFreeRules", "[", 
       RowBox[{"tens", ",", "#", ",", "met"}], "]"}], "&"}], "/@", 
     RowBox[{"Subsets", "[", 
      RowBox[{"slots", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True],

Cell["Main code", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraceFreeRules", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tensor_", "?", "xTensorQ"}], "[", 
      RowBox[{"inds___", "?", "ALIndexQ"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a_", "?", "AIndexQ"}], ",", 
       RowBox[{"b_", "?", "AIndexQ"}]}], "}"}], ",", 
     RowBox[{"met", ":", 
      RowBox[{
       RowBox[{"_", "?", "MetricQ"}], "|", 
       RowBox[{"_", "?", "InverseMetricQ"}], "|", "delta"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tensWithLIPats", "=", 
       RowBox[{
        RowBox[{"tensor", "[", "inds", "]"}], "/.", "MakeLIPatternRule"}]}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "Checks", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CheckTraceFreeRules", "[", 
       RowBox[{
        RowBox[{"tensor", "[", "inds", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", "met"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Except", " ", "in", " ", "the", " ", "case", " ", "of", " ", 
         "delta"}], ",", " ", 
        RowBox[{
        "we", " ", "need", " ", "rules", " ", "with", " ", "met", " ", 
         "appearing", " ", 
         RowBox[{"explicitly", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"metExplicitRules", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"met", "===", "delta"}], ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{"MakeRule", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"tensWithLIPats", " ", 
                 RowBox[{"met", "[", 
                  RowBox[{
                   RowBox[{"ChangeIndex", "@", "a"}], ",", 
                   RowBox[{"ChangeIndex", "@", "b"}]}], "]"}]}], ",", "0"}], 
               "}"}], ",", 
              RowBox[{"PatternIndices", "\[Rule]", "All"}], ",", 
              RowBox[{"MetricOn", "\[Rule]", "All"}], ",", 
              RowBox[{"Evaluate", "\[Rule]", "False"}], ",", 
              RowBox[{"UseSymmetries", "\[Rule]", "True"}]}], "]"}]}], 
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "If", " ", "we", " ", "have", " ", "a", " ", "metric", " ", "or", 
           " ", "not"}], ",", " ", 
          RowBox[{"generate", " ", "rules", " ", "without", " ", "met", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "whether", " ", "met", " ", "is", " ", "delta", " ", "or", " ", 
              "not"}], ",", " ", 
             RowBox[{
             "this", " ", "is", " ", "handled", " ", "the", " ", "same", " ", 
              "with", " ", "ContractMetric"}]}], " "}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"contractedRules", "=", 
            RowBox[{"MakeRule", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"ContractMetric", "[", 
                  RowBox[{"tensWithLIPats", " ", 
                   RowBox[{"met", "[", 
                    RowBox[{
                    RowBox[{"ChangeIndex", "@", "a"}], ",", 
                    RowBox[{"ChangeIndex", "@", "b"}]}], "]"}]}], "]"}]}], 
                ",", "0"}], "}"}], ",", 
              RowBox[{"PatternIndices", "\[Rule]", "All"}], ",", 
              RowBox[{"MetricOn", "\[Rule]", "All"}], ",", 
              RowBox[{"Evaluate", "\[Rule]", "False"}], ",", 
              RowBox[{"UseSymmetries", "\[Rule]", "True"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "We", " ", "can", " ", "also", " ", "slightly", " ", "simplify", 
            " ", "the", " ", "rules", " ", "because", " ", "we", " ", "know", 
            " ", "their", " ", "structure"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "This", " ", "is", " ", "the", " ", "final", " ", "result"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"metExplicitRules", ",", "contractedRules"}], "]"}], "/.", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x_", "\[RuleDelayed]", "_"}], ")"}], "\[RuleDelayed]", 
             
             RowBox[{"(", 
              RowBox[{"x", "\[RuleDelayed]", "0"}], ")"}]}]}], "//", 
           "Union"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]",
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
SetTraceFreeRules is a trivial function that just calls AutomaticaRules.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetTraceFreeRules", "[", 
   RowBox[{"tens_", ",", "rest__"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"subhead", "=", 
      RowBox[{"SubHead", "@", "tens"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AutomaticRules", "[", 
     RowBox[{"subhead", ",", 
      RowBox[{"TraceFreeRules", "[", 
       RowBox[{"tens", ",", "rest"}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.4 Modify the Options list for DefTensor", "Subsubsection"],

Cell["\<\
Add TraceFree to the list of Options, if it\[CloseCurlyQuote]s not already \
there\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"FreeQ", "[", 
     RowBox[{
      RowBox[{"First", "/@", 
       RowBox[{"Options", "[", "DefTensor", "]"}]}], ",", "TraceFree"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Unprotect", "[", "DefTensor", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Options", "[", "DefTensor", "]"}], "=", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"Options", "[", "DefTensor", "]"}], ",", 
        RowBox[{"TraceFree", "\[Rule]", 
         RowBox[{"{", "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Protect", "[", "DefTensor", "]"}], ";"}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["2.5 Checking input for TraceFree (the Option for DefTensor)", \
"Subsubsection"],

Cell["\<\
We do this separately from the CheckTraceFreeRules ... maybe this is silly?\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Two", " ", "argument", " ", 
    RowBox[{"forms", " ", "--"}], " ", "convert", " ", "to", " ", "three", 
    " ", "argument", " ", "forms"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Using", " ", "First", " ", "metric"}], ",", " ", 
    RowBox[{"if", " ", "there", " ", "is", " ", "one"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"CheckTraceFree", "[", 
       RowBox[{"tens_", ",", 
        RowBox[{"{", 
         RowBox[{"inds__", "?", "AIndexQ"}], "}"}]}], "]"}], "/;", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"{", "inds", "}"}], "]"}], "\[GreaterEqual]", "2"}], ")"}], 
       "&&", 
       RowBox[{"(", 
        RowBox[{"1", "\[Equal]", 
         RowBox[{"Length", "@", 
          RowBox[{"Union", "[", 
           RowBox[{"VBundleOfIndex", "/@", 
            RowBox[{"{", "inds", "}"}]}], "]"}]}]}], ")"}]}]}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"metrics", "=", 
         RowBox[{"MetricsOfVBundle", "@", 
          RowBox[{"VBundleOfIndex", "@", 
           RowBox[{"First", "@", 
            RowBox[{"{", "inds", "}"}]}]}]}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"CheckTraceFree", "[", 
         RowBox[{"tens", ",", 
          RowBox[{"{", "inds", "}"}], ",", 
          RowBox[{"First", "@", "metrics"}]}], "]"}], "/;", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "metrics"}], "\[GreaterEqual]", "1"}], 
         ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Convert", " ", "to", " ", "three", " ", "argument", " ", "form"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckTraceFree", "[", 
      RowBox[{"tens_", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"inds__", "?", "AIndexQ"}], "}"}], ",", "met_"}], "}"}]}], 
      "]"}], ":=", 
     RowBox[{"CheckTraceFree", "[", 
      RowBox[{"tens", ",", 
       RowBox[{"{", "inds", "}"}], ",", "met"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckTraceFree", "[", 
      RowBox[{"tens_", ",", 
       RowBox[{"arguments", ":", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", "_"}], "}"}], ".."}], "}"}]}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"CheckTraceFree", "[", 
        RowBox[{"tens", ",", "#"}], "]"}], "&"}], "/@", "arguments"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Three", " ", "argument", " ", "forms"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Thread", " ", "over", " ", "metrics"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckTraceFree", "[", 
      RowBox[{"tens_", ",", "slots_", ",", "metrics_List"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"CheckTraceFree", "[", 
        RowBox[{"tens", ",", "slots", ",", "#"}], "]"}], "&"}], "/@", 
      "metrics"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Thread", " ", "over", " ", "several", " ", "indices"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckTraceFree", "[", 
      RowBox[{"tens_", ",", 
       RowBox[{"slots_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], ">", "2"}], "&"}], ")"}]}], ",",
        "metric_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"CheckTraceFree", "[", 
        RowBox[{"tens", ",", "#", ",", "metric"}], "]"}], "&"}], "/@", 
      RowBox[{"Subsets", "[", 
       RowBox[{"slots", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckTraceFree", "[", 
      RowBox[{"tens_", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a_", "?", "AIndexQ"}], ",", 
         RowBox[{"b_", "?", "AIndexQ"}]}], "}"}], ",", 
       RowBox[{"met", ":", 
        RowBox[{
         RowBox[{"_", "?", "MetricQ"}], "|", 
         RowBox[{"_", "?", "InverseMetricQ"}], "|", "delta"}]}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Now", " ", "use", " ", "CheckTraceFreeRules", " ", "for", " ", "the",
          " ", "logic"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"CheckTraceFreeRules", "[", 
         RowBox[{"tens", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "met"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckTraceFree", "[", 
      RowBox[{"tens_", ",", "rest__"}], "]"}], ":=", 
     RowBox[{"Throw", "@", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"TraceFree", "::", "invalid"}], ",", 
        RowBox[{"{", "rest", "}"}], ",", "\"\<format for TraceFree\>\""}], 
       "]"}]}]}], ";"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.6 The hooks (functions) themselves", "Subsubsection"],

Cell["\<\
The functions will be called with the same arguments as DefTensor. This \
decides the interface for our hooks.
Note: These functions are in our private scope, so there\[CloseCurlyQuote]s \
no danger of them colliding with others named similarly.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "the", " ", "input"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DefTensorBeginning", "[", 
      RowBox[{
       RowBox[{"head_", "[", "indices___", "]"}], ",", "dependencies_", ",", 
       "sym_", ",", "options___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tf", "=", 
         RowBox[{"OptionValue", "[", 
          RowBox[{"DefTensor", ",", 
           RowBox[{"{", "options", "}"}], ",", "TraceFree"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"tf", "=!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"CheckTraceFree", "[", 
           RowBox[{
            RowBox[{"head", "[", "indices", "]"}], ",", "tf"}], "]"}]}], 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Call", " ", "SetTraceFreeRules"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DefTensorEnd", "[", 
      RowBox[{
       RowBox[{"head_", "[", "indices___", "]"}], ",", "dependencies_", ",", 
       "sym_", ",", "options___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tf", "=", 
         RowBox[{"OptionValue", "[", 
          RowBox[{"DefTensor", ",", 
           RowBox[{"{", "options", "}"}], ",", "TraceFree"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"tf", "=!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"SetTraceFreeRules", "[", 
           RowBox[{
            RowBox[{"head", "[", "indices", "]"}], ",", "tf"}], "]"}]}], 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.7 Registering our hooks", "Subsubsection"],

Cell["Here we let the xTension system know about our functions.", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTension", "[", 
    RowBox[{
    "\"\<TraceFree`\>\"", ",", "DefTensor", ",", "\"\<Beginning\>\""}], "]"}],
    "=", "DefTensorBeginning"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xTension", "[", 
    RowBox[{"\"\<TraceFree`\>\"", ",", "DefTensor", ",", "\"\<End\>\""}], 
    "]"}], "=", "DefTensorEnd"}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. End private and package", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Protect", "[", "TraceFree", "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. Examples", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell["The user context is empty :", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Global`*"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Information", "::", "nomatch"}], "MessageName"], ":", 
  " ", "\<\"No symbol matching \[NoBreak]\\!\\(\\\"Global`*\\\"\\)\[NoBreak] \
found. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Information/nomatch\\\", ButtonNote -> \
\\\"Information::nomatch\\\"]\\)\"\>"}]], "Message", "MSG"]
}, Open  ]],

Cell["Define a manifold", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefManifold", "[", 
  RowBox[{"M4", ",", "4", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefManifold", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"manifold \"\>", "\[InvisibleSpace]", "M4", 
   "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefManifold, ": Defining ", 
   "manifold ", $CellContext`M4, ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefVBundle", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"vbundle \"\>", "\[InvisibleSpace]", "TangentM4", 
   "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefVBundle, ": Defining ", 
   "vbundle ", $CellContext`TangentM4, ". ", ""],
  Editable->False]], "Print"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Make a tracefree tensor without any metric. We must explicitly specify delta \
(just indices can be used when there is a metric).\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefTensor", "[", 
  RowBox[{
   RowBox[{"T", "[", 
    RowBox[{"a", ",", 
     RowBox[{"-", "b"}]}], "]"}], ",", "M4", ",", 
   RowBox[{"TraceFree", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"-", "b"}]}], "}"}], ",", "delta"}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"T", "[", 
    RowBox[{"a", ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "tensor ", 
   $CellContext`T[$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"   Rules \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "1", "}"}], 
   "\[InvisibleSpace]", "\<\" have been declared as DownValues for \"\>", 
   "\[InvisibleSpace]", "T", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["   Rules ", 
   Shallow[{1}], " have been declared as DownValues for ", $CellContext`T, 
   "."],
  Editable->False]], "Print"]
}, Open  ]]
}, Open  ]],

Cell["Define a metric", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefMetric", "[", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"met", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], ",", "CD", ",", 
   RowBox[{"PrintAs", "\[Rule]", "\"\<g\>\""}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric metric tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"met", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "symmetric metric tensor ", 
   $CellContext`met[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"antisymmetric tensor \"\>", "\[InvisibleSpace]", 
   
   RowBox[{"epsilonmet", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}], ",", 
     RowBox[{"-", "d"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "antisymmetric tensor ", 
   $CellContext`epsilonmet[-$CellContext`a, -$CellContext`b, -$CellContext`c, \
-$CellContext`d], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"tetrametric \"\>", "\[InvisibleSpace]", 
   RowBox[{"Tetramet", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}], ",", 
     RowBox[{"-", "d"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "tetrametric ", 
   $CellContext`Tetramet[-$CellContext`a, -$CellContext`b, -$CellContext`c, \
-$CellContext`d], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"tetrametric \"\>", "\[InvisibleSpace]", 
   RowBox[{"Tetramet\[Dagger]", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}], ",", 
     RowBox[{"-", "d"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "tetrametric ", 
   $CellContext`Tetramet\[Dagger][-$CellContext`a, -$CellContext`b, \
-$CellContext`c, -$CellContext`d], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"covariant derivative \"\>", "\[InvisibleSpace]", 
   
   RowBox[{"CD", "[", 
    RowBox[{"-", "a"}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefCovD, ": Defining ", "covariant derivative ", 
   $CellContext`CD[-$CellContext`a], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"vanishing torsion tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"TorsionCD", "[", 
    RowBox[{"a", ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "vanishing torsion tensor ", 
   $CellContext`TorsionCD[$CellContext`a, -$CellContext`b, -$CellContext`c], 
   ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Christoffel tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"ChristoffelCD", "[", 
    RowBox[{"a", ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", 
   "symmetric Christoffel tensor ", 
   $CellContext`ChristoffelCD[$CellContext`a, -$CellContext`b, \
-$CellContext`c], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Riemann tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"RiemannCD", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}], ",", 
     RowBox[{"-", "d"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "Riemann tensor ", 
   $CellContext`RiemannCD[-$CellContext`a, -$CellContext`b, -$CellContext`c, \
-$CellContext`d], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Ricci tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"RicciCD", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "symmetric Ricci tensor ", 
   $CellContext`RicciCD[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData["\<\"** DefCovD:  Contractions of Riemann automatically replaced \
by Ricci.\"\>"], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Ricci scalar \"\>", "\[InvisibleSpace]", 
   RowBox[{"RicciScalarCD", "[", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "Ricci scalar ", 
   $CellContext`RicciScalarCD[], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData["\<\"** DefCovD:  Contractions of Ricci automatically replaced \
by RicciScalar.\"\>"], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Einstein tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"EinsteinCD", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", 
   "symmetric Einstein tensor ", 
   $CellContext`EinsteinCD[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Weyl tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"WeylCD", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}], ",", 
     RowBox[{"-", "d"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "Weyl tensor ", 
   $CellContext`WeylCD[-$CellContext`a, -$CellContext`b, -$CellContext`c, \
-$CellContext`d], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric TFRicci tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"TFRicciCD", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "symmetric TFRicci tensor ", 
   $CellContext`TFRicciCD[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Kretschmann scalar \"\>", "\[InvisibleSpace]", 
   RowBox[{"KretschmannCD", "[", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "Kretschmann scalar ", 
   $CellContext`KretschmannCD[], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** DefCovD:  Computing RiemannToWeylRules for dim \"\>", 
   "\[InvisibleSpace]", "4"}],
  SequenceForm["** DefCovD:  Computing RiemannToWeylRules for dim ", 4],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** DefCovD:  Computing RicciToTFRicci for dim \"\>", 
   "\[InvisibleSpace]", "4"}],
  SequenceForm["** DefCovD:  Computing RicciToTFRicci for dim ", 4],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** DefCovD:  Computing RicciToEinsteinRules for dim \"\>", 
   "\[InvisibleSpace]", "4"}],
  SequenceForm["** DefCovD:  Computing RicciToEinsteinRules for dim ", 4],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"weight +2 density \"\>", "\[InvisibleSpace]", 
   RowBox[{"Detmet", "[", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"Determinant.\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "weight +2 density ", 
   $CellContext`Detmet[], ". ", "Determinant."],
  Editable->False]], "Print"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Define another tensor which is symmetric and completely tracefree. Since we \
have a metric we can just give a list of indices.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefTensor", "[", 
  RowBox[{
   RowBox[{"S", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", "M4", ",", 
   RowBox[{"Symmetric", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], ",", 
   RowBox[{"TraceFree", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"S", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], 
   "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "tensor ", 
   $CellContext`S[$CellContext`a, $CellContext`b, $CellContext`c], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"   Rules \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "73", ",", "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", 
     ",", "80", ",", "81", ",", "82", ",", 
     RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" have been declared as DownValues for \"\>", 
   "\[InvisibleSpace]", "S", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["   Rules ", 
   Shallow[{73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 
    89, 90}], " have been declared as DownValues for ", $CellContext`S, "."],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"   Rules \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", 
     RowBox[{"\[LeftSkeleton]", "62", "\[RightSkeleton]"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" have been declared as UpValues for \"\>", 
   "\[InvisibleSpace]", "S", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["   Rules ", 
   Shallow[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 
    38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 
    56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72}], 
   " have been declared as UpValues for ", $CellContext`S, "."],
  Editable->False]], "Print"]
}, Open  ]]
}, Open  ]],

Cell["\<\
There are lots of definitions ... because they include those with the metric \
appearing and those with an internal contraction:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"met", "[", 
   RowBox[{
    RowBox[{"-", "a"}], ",", 
    RowBox[{"-", "b"}]}], "]"}], 
  RowBox[{"S", "[", 
   RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"S", "[", 
  RowBox[{"a", ",", "b", ",", 
   RowBox[{"-", "a"}]}], "]"}]}], "Input"],

Cell[BoxData["0"], "Output"],

Cell[BoxData["0"], "Output"]
}, Open  ]],

Cell["Define another metric", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefMetric", "[", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"H", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], ",", "cdH"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DefMetric", "::", "old"}], "MessageName"], ":", 
  " ", "\<\"There are already metrics \[NoBreak]\\!\\({met}\\)\[NoBreak] in \
vbundle \[NoBreak]\\!\\(\\*InterpretationBox[StyleBox[\\\"\
\[DoubleStruckCapitalT]M4\\\", Rule[AutoSpacing, False], Rule[ShowAutoStyles, \
False]], TangentM4, Rule[Editable, False]]\\)\[NoBreak].\"\>"}]], "Message", \
"MSG"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric metric tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"H", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "symmetric metric tensor ", 
   $CellContext`H[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"inverse metric tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"InvH", "[", 
    RowBox[{"a", ",", "b"}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"Metric is frozen!\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "inverse metric tensor ", 
   $CellContext`InvH[$CellContext`a, $CellContext`b], ". ", 
   "Metric is frozen!"],
  Editable->False]], "Print"],

Cell[BoxData["\<\"** DefMetric: Don't know yet how to define epsilon for a \
frozen metric.\"\>"], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"covariant derivative \"\>", "\[InvisibleSpace]", 
   
   RowBox[{"cdH", "[", 
    RowBox[{"-", "a"}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefCovD, ": Defining ", "covariant derivative ", 
   $CellContext`cdH[-$CellContext`a], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"vanishing torsion tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"TorsioncdH", "[", 
    RowBox[{"a", ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "vanishing torsion tensor ", 
   $CellContext`TorsioncdH[$CellContext`a, -$CellContext`b, -$CellContext`c], 
   ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Christoffel tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"ChristoffelcdH", "[", 
    RowBox[{"a", ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", 
   "symmetric Christoffel tensor ", 
   $CellContext`ChristoffelcdH[$CellContext`a, -$CellContext`b, \
-$CellContext`c], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Riemann tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"RiemannDowncdH", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}], ",", 
     RowBox[{"-", "d"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "Riemann tensor ", 
   $CellContext`RiemannDowncdH[-$CellContext`a, -$CellContext`b, \
-$CellContext`c, -$CellContext`d], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Riemann tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"RiemanncdH", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}], ",", "d"}], "]"}], "\[InvisibleSpace]", "\<\". \"\>",
    "\[InvisibleSpace]", "\<\"Antisymmetric only in the first pair.\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "Riemann tensor ", 
   $CellContext`RiemanncdH[-$CellContext`a, -$CellContext`b, -$CellContext`c, \
$CellContext`d], ". ", "Antisymmetric only in the first pair."],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Ricci tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"RiccicdH", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "symmetric Ricci tensor ", 
   $CellContext`RiccicdH[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData["\<\"** DefCovD:  Contractions of Riemann automatically replaced \
by Ricci.\"\>"], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Ricci scalar \"\>", "\[InvisibleSpace]", 
   RowBox[{"RicciScalarcdH", "[", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "Ricci scalar ", 
   $CellContext`RicciScalarcdH[], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData["\<\"** DefCovD:  Contractions of Ricci automatically replaced \
by RicciScalar.\"\>"], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Einstein tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"EinsteincdH", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", 
   "symmetric Einstein tensor ", 
   $CellContext`EinsteincdH[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Weyl tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"WeylcdH", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}], ",", 
     RowBox[{"-", "d"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "Weyl tensor ", 
   $CellContext`WeylcdH[-$CellContext`a, -$CellContext`b, -$CellContext`c, \
-$CellContext`d], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric TFRicci tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"TFRiccicdH", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "symmetric TFRicci tensor ", 
   $CellContext`TFRiccicdH[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Kretschmann scalar \"\>", "\[InvisibleSpace]", 
   RowBox[{"KretschmanncdH", "[", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "Kretschmann scalar ", 
   $CellContext`KretschmanncdH[], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** DefCovD:  Computing RiemannToWeylRules for dim \"\>", 
   "\[InvisibleSpace]", "4"}],
  SequenceForm["** DefCovD:  Computing RiemannToWeylRules for dim ", 4],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** DefCovD:  Computing RicciToEinsteinRules for dim \"\>", 
   "\[InvisibleSpace]", "4"}],
  SequenceForm["** DefCovD:  Computing RicciToEinsteinRules for dim ", 4],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"weight +2 density \"\>", "\[InvisibleSpace]", 
   RowBox[{"DetH", "[", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"Determinant.\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "weight +2 density ", 
   $CellContext`DetH[], ". ", "Determinant."],
  Editable->False]], "Print"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Make a tensor which is tracefree on some indices with met, and tracefree on \
some other indices with H\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefTensor", "[", 
  RowBox[{
   RowBox[{"W", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], ",", "M4", ",", 
   RowBox[{"TraceFree", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", "met"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"c", ",", "d"}], "}"}], ",", "H"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"W", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], 
   "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "tensor ", 
   $CellContext`W[$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"   Rules \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"17", ",", "18"}], "}"}], 
   "\[InvisibleSpace]", "\<\" have been declared as DownValues for \"\>", 
   "\[InvisibleSpace]", "W", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["   Rules ", 
   Shallow[{17, 18}], 
   " have been declared as DownValues for ", $CellContext`W, "."],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"   Rules \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", 
     RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" have been declared as UpValues for \"\>", 
   "\[InvisibleSpace]", "W", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["   Rules ", 
   Shallow[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}], 
   " have been declared as UpValues for ", $CellContext`W, "."],
  Editable->False]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"W", "[", 
    RowBox[{"a", ",", 
     RowBox[{"-", "a"}], ",", "c", ",", "d"}], "]"}], ",", 
   RowBox[{"W", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", 
     RowBox[{"-", "c"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"W", "[", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"-", "d"}]}], "]"}], 
    RowBox[{"H", "[", 
     RowBox[{
      RowBox[{"-", "c"}], ",", "d"}], "]"}]}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   InterpretationBox[
    StyleBox[GridBox[{
       {"W", 
        StyleBox[GridBox[{
           {"a", "b", "c", " "},
           {" ", " ", " ", "c"}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
               Offset[0.]}}, "RowsIndexed" -> {}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Center}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    $CellContext`W[$CellContext`a, $CellContext`b, $CellContext`c, \
-$CellContext`c],
    Editable->False], ",", "0"}], "}"}]], "Output"]
}, Open  ]],

Cell["Some possible errors:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefTensor", "[", 
  RowBox[{
   RowBox[{"Scal", "[", "]"}], ",", "M4", ",", 
   RowBox[{"TraceFree", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", "met"}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"Scal", "[", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "tensor ", 
   $CellContext`Scal[], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"TraceFree", "::", "doesntappear"}], "MessageName"], ":", 
  " ", "\<\"Index \[NoBreak]\\!\\(a\\)\[NoBreak] does not appear in \
\[NoBreak]\\!\\(Scal[]\\)\[NoBreak].\"\>"}]], "Message", "MSG"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefTensor", "[", 
  RowBox[{
   RowBox[{"Vect", "[", "a", "]"}], ",", "M4", ",", 
   RowBox[{"TraceFree", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"Vect", "[", "a", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "tensor ", 
   $CellContext`Vect[$CellContext`a], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"TraceFree", "::", "doesntappear"}], "MessageName"], ":", 
  " ", "\<\"Index \[NoBreak]\\!\\(b\\)\[NoBreak] does not appear in \
\[NoBreak]\\!\\(Vect[a]\\)\[NoBreak].\"\>"}]], "Message", "MSG"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefTensor", "[", 
  RowBox[{
   RowBox[{"Tens", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", "M4", ",", 
   RowBox[{"TraceFree", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", "notAMetric"}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"Tens", "[", 
    RowBox[{"a", ",", "b"}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "tensor ", 
   $CellContext`Tens[$CellContext`a, $CellContext`b], ". ", ""],
  Editable->False]], "Print"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"TraceFree", "::", "invalid"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\({\\(\\({a, b}\\)\\), notAMetric}\\)\[NoBreak] is \
not a valid \[NoBreak]\\!\\(\\\"format for \
TraceFree\\\"\\)\[NoBreak].\"\>"}]], "Message", "MSG"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowToolbars->{},
WindowSize->{1232, 783},
WindowMargins->{{62, Automatic}, {Automatic, 106}},
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False,
"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
TrackCellChangeTimes->False,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]

